# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # number of worker nodes
  N = 3

  # k8s master
  config.vm.define "m-k8s" do |cfg|
    # vm os 및 리소스 설정
    cfg.vm.box = "ubuntu/focal64"
    # vm host name 설정
    cfg.vm.host_name = "m-k8s"
    # 마스터 노드 private network 설정 
    cfg.vm.network "private_network", ip: "192.168.1.10"
    # local 60010 -> vm 22 로 ssh 접속 (id: "ssh" 설정으로 로컬에서만 접속할 수 있도록 구성. 실행 후, .vagrant 디렉토리에 private key 저장됨)
    cfg.vm.network "forwarded_port", guest: 22, host: 60010, auto_correct: true, id: "ssh"

    cfg.vm.provider "virtualbox" do |vb|
      vb.name = "m-k8s-vm"
      vb.cpus = 2
      vb.memory = 2048
      # virtualbox group 지정
      vb.customize ["modifyvm", :id, "--groups", "/k8s-SM"]
      # network 설정 
      vb.customize ["modifyvm", :id, "--nic1", "hostonly"]
      vb.customize ["modifyvm", :id, "--nic2", "nat"]
    end 

    # 워커 노드 가입을 위한 shell 저장을 위해 로컬의 data 디렉토리를 공유 디렉토리로 지정. 실제 vm 내의 vagrant 디렉토리와 동기화됨 
    cfg.vm.synced_folder "./data", "/vagrant"
    # common.sh, master.sh 실행
    cfg.vm.provision "shell", path: "./common.sh"
    cfg.vm.provision "shell", path: "./master.sh"
  end

  # Add nodes

  # k8s workers
  (1..N).each do |i|
    config.vm.define "w#{i}-k8s" do |cfg|
      cfg.vm.box = "ubuntu/focal64"
      cfg.vm.host_name = "w#{i}-k8s"
      cfg.vm.network "private_network", ip: "192.168.1.10#{i}"
      cfg.vm.network "forwarded_port", guest: 22, host: "6010#{i}", auto_correct: true, id: "ssh"
      
      cfg.vm.provider "virtualbox" do |vb|
        vb.name = "w#{i}-k8s-vm"
        vb.cpus = 2
        vb.memory = 1024
        # 마스터와 동일한 virtualbox group으로 지정
        vb.customize ["modifyvm", :id, "--groups", "/k8s-SM"]
        # network 설정 
        vb.customize ["modifyvm", :id, "--nic1", "hostonlynet", "--host-only-net1=HostOnly"]
        vb.customize ["modifyvm", :id, "--nic2", "nat"]
      end 
      
      cfg.vm.synced_folder "./data", "/vagrant"
      # common.sh, worker.sh 실행
      cfg.vm.provision "shell", path: "./common.sh"
      cfg.vm.provision "shell", path: "./worker.sh"
    end
  end 
end